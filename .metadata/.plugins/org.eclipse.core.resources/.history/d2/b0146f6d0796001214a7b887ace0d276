package com.example;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.media.MediaPlayer;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

public class MyService extends Service {
	private static final String TAG = "MyService";
	MediaPlayer player;
	
	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}
	
	@Override
	public void onCreate() {
		Toast.makeText(this, "My Service Created", Toast.LENGTH_LONG).show();
		Log.d(TAG, "onCreate");
		
	//	player = MediaPlayer.create(this, R.raw.braincandy);
	//	player.setLooping(false); // Set looping
	}

	@Override
	public void onDestroy() {
		Toast.makeText(this, "My Service Stopped", Toast.LENGTH_LONG).show();
		Log.d(TAG, "onDestroy");
	//	player.stop();
	}
	
	@Override
	public void onStart(Intent intent, int startid) {

		Log.d(TAG, "onStart");
		int wifiState = intent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN);
        

        switch (wifiState) {
        case WifiManager.WIFI_STATE_DISABLING:
           
            break;
        case WifiManager.WIFI_STATE_DISABLED:
            
            break;
        case WifiManager.WIFI_STATE_ENABLING:
        	WifiManager wifiMgr1 = (WifiManager) getSystemService(Context.WIFI_SERVICE);
    		WifiInfo wifiInfo1 = wifiMgr1.getConnectionInfo();
    		String name1 = wifiInfo1.getSSID();
    		if(name1.startsWith("NETGEAR")){
    		imposto("http://raelixx.ns0.it:441/decoder_control.cgi?user=raelix&pwd=Enrico1952&command=37");
    		Toast.makeText(this,"connesso ad "+name1, Toast.LENGTH_LONG).show();
    		}
            break;
        case WifiManager.WIFI_STATE_ENABLED:
        	WifiManager wifiMgr = (WifiManager) getSystemService(Context.WIFI_SERVICE);
    		WifiInfo wifiInfo = wifiMgr.getConnectionInfo();
    		String name = wifiInfo.getSSID();
    		
    		if(name.startsWith("NETGEAR")){
    		imposto("http://raelixx.ns0.it:441/decoder_control.cgi?user=raelix&pwd=Enrico1952&command=37");
    		Toast.makeText(this,"connesso ad"+name, Toast.LENGTH_LONG).show();
    		}
            break;
        case WifiManager.WIFI_STATE_UNKNOWN:
       
            break;
        default:
            break;
        }
	//	player.start();
	}
	
	public void imposto(String str){
	    HttpResponse response = null;
		try {        
		        HttpClient client = new DefaultHttpClient();
		        HttpGet request = new HttpGet();
		        request.setURI(new URI(str));
		        response = client.execute(request);
		    } catch (URISyntaxException e) {
		        e.printStackTrace();
		    } catch (ClientProtocolException e) {
		        // TODO Auto-generated catch block
		        e.printStackTrace();
		    } catch (IOException e) {
		        // TODO Auto-generated catch block
		        e.printStackTrace();
		    }   
		
	}
}